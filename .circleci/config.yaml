language: rust
rust: 
  - nightly
before_scripts:
  - rustup component add clippy --toolchain=nightly || cargo install --git https://github.com/rust-lang/rust-clippy/ --force clippy
  - rustup component add rustfmt --tollchain=nighlty
  # etc
script:
  - cargo clippy
  # if you want the build job to fail when encountering warnings, use
  - cargo clippy -- -D warnings
  # in order to also check tests and non-default crate features, use
  - cargo clippy --all-targets --all-features -- -D warnings
  - cargo fmt --all -- --check
  - cargo build
  - cargo test
  # etc.

# version: 2

# jobs:
#   build:
#     docker:
#       # The image used to build our project, build
#       # your own using the Dockerfile provided below
#       # and replace here. I put my own image here for
#       # the example.
#       - image: abronan/rust-circleci:latest

#     environment:
#       # Set your codecov token if your repository is private.
#       CODECOV_TOKEN: <your-token>
#       TZ: "/usr/share/zoneinfo/Europe/Paris"

#     steps:
#       - checkout
#       - restore_cache:
#           key: project-cache
#       - run:
#           name: Check formatting
#           command: |
#             rustfmt --version
#             cargo fmt -- --write-mode=diff
#       - run:
#           name: Nightly Build
#           command: |
#             rustup run nightly rustc --version --verbose
#             rustup run nightly cargo --version --verbose
#             rustup run nightly cargo build
#       - run:
#           name: Stable Build
#           command: |
#             rustup run stable rustc --version --verbose
#             rustup run stable cargo --version --verbose
#             rustup run stable cargo build
#       - run:
#           name: Test
#           command: rustup run stable cargo test
#       - run:
#           name: Upload Coverage
#           command: ./scripts/codecov.sh
#       - save_cache:
#           key: project-cache
#           paths:
#             - "~/.cargo"
#             - "./target"